// Code generated by "requestgen -type CancelOrderRequest"; DO NOT EDIT.

package okexapi

import (
	"encoding/json"
	"fmt"
	"net/url"
)

func (c *CancelOrderRequest) InstrumentID(instrumentID string) *CancelOrderRequest {
	c.instrumentID = instrumentID
	return c
}

func (c *CancelOrderRequest) OrderID(orderID string) *CancelOrderRequest {
	c.orderID = &orderID
	return c
}

func (c *CancelOrderRequest) ClientOrderID(clientOrderID string) *CancelOrderRequest {
	c.clientOrderID = &clientOrderID
	return c
}

func (c *CancelOrderRequest) GetParameters() (map[string]interface{}, error) {
	var params = map[string]interface{}{}

	// check instrumentID field -> json key instId
	instrumentID := c.instrumentID

	// assign parameter of instrumentID
	params["instId"] = instrumentID

	// check orderID field -> json key ordId
	if c.orderID != nil {
		orderID := *c.orderID

		// assign parameter of orderID
		params["ordId"] = orderID
	}

	// check clientOrderID field -> json key clOrdId
	if c.clientOrderID != nil {
		clientOrderID := *c.clientOrderID

		// assign parameter of clientOrderID
		params["clOrdId"] = clientOrderID
	}

	return params, nil
}

func (c *CancelOrderRequest) GetParametersQuery() (url.Values, error) {
	query := url.Values{}

	params, err := c.GetParameters()
	if err != nil {
		return query, err
	}

	for k, v := range params {
		query.Add(k, fmt.Sprintf("%v", v))
	}

	return query, nil
}

func (c *CancelOrderRequest) GetParametersJSON() ([]byte, error) {
	params, err := c.GetParameters()
	if err != nil {
		return nil, err
	}

	return json.Marshal(params)
}
